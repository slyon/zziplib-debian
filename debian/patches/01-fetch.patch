diff -uNrBb a/zzip/fetch.c b/zzip/fetch.c
--- a/zzip/fetch.c	2008-04-05 17:56:49.000000000 +0100
+++ b/zzip/fetch.c	2008-04-05 17:56:44.000000000 +0100
@@ -16,17 +16,6 @@
 
 #include <zzip/fetch.h>
 
-#if defined ZZIP_WORDS_BIGENDIAN && \
-   defined bswap_16 && defined bswap_32 && defined bswap_64
-# define __ZZIP_GET16(__p)                        bswap_16(*(uint16_t*)(__p))
-# define __ZZIP_GET32(__p)                        bswap_32(*(uint32_t*)(__p))
-# define __ZZIP_SET16(__p,__x) (*(uint16_t*)(__p) = bswap_16((uint16_t)(__x)))
-# define __ZZIP_SET32(__p,__x) (*(uint32_t*)(__p) = bswap_32((uint32_t)(__x)))
-# define __ZZIP_GET64(__p)                    bswap_64(*(zzip_off64_t*)(__p))
-# define __ZZIP_SET64(__p,__x) \
-                     (*(zzip_off64_t*)(__p) = bswap_64((zzip_off64_t)(__x)))
-#endif
-
 /* ------------------------- fetch helpers --------------------------------- */
 
 /**
diff -up a/zzip/fetch.h b/zzip/fetch.h
--- a/zzip/fetch.h	2008-03-23 07:41:26.000000000 +1100
+++ b/zzip/fetch.h	2009-03-23 21:28:05.000000000 +1100
@@ -23,35 +23,12 @@ extern void     __zzip_set16(zzip_byte_t
 extern uint64_t __zzip_get64(zzip_byte_t * s) __zzip_attribute__((const));
 extern void     __zzip_set64(zzip_byte_t * s, uint64_t v);
 
-#ifdef ZZIP_WORDS_BIGENDIAN
-# if defined bswap_16 && defined bswap_32 && defined bswap_64 /* i.e. linux */
-# ifndef ZZIP_HAVE_ALIGNED_ACCESS_REQUIRED
-# define _ZZIP_USE_BSWAP
-# endif
-# endif
-# ifdef _ZZIP_USE_BSWAP
-# define ZZIP_GET16(__p)                        bswap_16(*(uint16_t*)(__p))
-# define ZZIP_GET32(__p)                        bswap_32(*(uint32_t*)(__p))
-# define ZZIP_GET64(__p)                        bswap_64(*(uint64_t*)(__p))
-# define ZZIP_SET16(__p,__x) (*(uint16_t*)(__p) = bswap_16((uint16_t)(__x)))
-# define ZZIP_SET32(__p,__x) (*(uint32_t*)(__p) = bswap_32((uint32_t)(__x)))
-# define ZZIP_SET64(__p,__x) (*(uint64_t*)(__p) = bswap_64((uint64_t)(__x)))
-# else
 # define ZZIP_GET64(__p)     (__zzip_get64((__p)))
 # define ZZIP_GET32(__p)     (__zzip_get32((__p)))
 # define ZZIP_GET16(__p)     (__zzip_get16((__p)))
 # define ZZIP_SET64(__p,__x) (__zzip_set64((__p),(__x)))
 # define ZZIP_SET32(__p,__x) (__zzip_set32((__p),(__x)))
 # define ZZIP_SET16(__p,__x) (__zzip_set16((__p),(__x)))
-# endif
-#else /* little endian is the original zip format byteorder */
-# define ZZIP_GET16(__p)     (*(uint16_t*)(__p))
-# define ZZIP_GET32(__p)     (*(uint32_t*)(__p))
-# define ZZIP_GET64(__p)     (*(uint64_t*)(__p))
-# define ZZIP_SET16(__p,__x) (*(uint16_t*)(__p) = (uint16_t)(__x))
-# define ZZIP_SET32(__p,__x) (*(uint32_t*)(__p) = (uint32_t)(__x))
-# define ZZIP_SET64(__p,__x) (*(uint64_t*)(__p) = (uint64_t)(__x))
-#endif
 
 /* ..................... bitcorrect physical access .................... */
 
